---
- hosts: all
  become: true
  vars:
    create_containers: 3
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: ping -t ya.ru

  tasks:
    - name: HW info
      vars:
       msg: |
        CPU: {{ ansible_processor }}
        CPU Core: {{ ansible_processor_cores }}
      debug:
       msg: "{{ msg.split('\n') }}"

    - name: Create Groups
      group:
        name: teacher
        state: present

    - name: Create User
      user:
        name: teacher
        state: present
        password: "{{ 'new_pass' | password_hash('sha512','A512') }}"
        shell: /bin/bash
        group: teacher

    - name: Install nginx
      apt: name={{ item }} state=latest update_cache=yes force_apt_get=yes
      loop: [ 'nginx' ]

    - name: Create file hello world
      copy:
        dest: "/var/www/html/helloworld.html"
        content: |
          hello world

    - name: delete file
      file:
       path: "/var/www/html/helloworld.html"
       state: absent

    - name: delete user
      user:
        name: teacher
        state: absent

    - name: Ensure nginx service is stopped
      service:
        name: nginx
        state: stopped

    - name: Ensure nginx package is removed
      apt:
        name: nginx
        state: absent

    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools', 'python-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker.io state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      docker_image:
        name: "{{ default_container_image }}"
        source: pull

    - name: pull an image
      docker_image:
        name: pacur/centos-7
        source: pull

    - name: Create default containers
      docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        state: present
      with_sequence: count={{ create_containers }}

    - name: install ftp
      apt:
        name: vsftpd
        update_cache: no
        state: present

    - name: config ftp
      file:
        path: /srv/ftp
        state: directory
        recurse: yes

    - name: Create file for ftp
      copy:
        dest: "/srv/ftp/hello.txt"
        content: |
          hello user!

    - name: check http status
      shell: service httpd status